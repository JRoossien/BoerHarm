package nl.josroossien.edugame.display  {		import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.system.fscommand;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;		import flashx.textLayout.elements.BreakElement;	import flashx.textLayout.formats.TextAlign;		import nl.josroossien.edugame.builders.LevelManager;	import nl.josroossien.edugame.builders.SoundManager;	import nl.josroossien.edugame.core.EduGame;	import nl.josroossien.edugame.objects.Button;	import nl.josroossien.edugame.objects.ShootingBoss;	import nl.josroossien.edugame.utils.DisplayUtil;
	public class MenuS extends MovieClip {	private var button:Button;	private var btns:int = 0;	private var buttonLabel:TextField;	private var text:TextField;	private var nameInput:TextField;	private var hover:Boolean;	private var nameString:String;	private var menuBG:MenuBG;	private var textFormat:TextFormat;		public function MenuS(menu:String) {		loadMenu(menu);		EduGame.getMain().state == "menu";	}		public function loadMenu(menu:String) {		if (menu == "account" || menu == "main" || menu == "info" || menu == "scoreboard1" || menu == "scoreboard2"			|| menu == "scoreboard3" || menu == "scoreboard4" || menu == "levelselect" || menu == "credits" || menu == "score" ) {			menuBG = new MenuBG;			addChild(menuBG);			DisplayUtil.sendToBack(menuBG);		}		switch (menu) {			case "none":				break;			case "account":				setupAccount();				break;			case "main":				setupMainMenu();				SoundManager.soundMan.playSound("menu");				break;			case "info":				setupInfo();				break;			case "scoreboard1":				setupScoreboard(1);				break;			case "scoreboard2":				setupScoreboard(2);				break;			case "scoreboard3":				setupScoreboard(3);				break;			case "scoreboard4":				setupScoreboard(4);				break;			case "levelselect":				setupLvlSelect();				break;			case "credits":				setupCredits();				break;			case "pause":				setupPause();				break;			case "score":				setupScore();				break;			case "puzzlecomplete":				setupPuzzleComplete();				break;			case "bosscomplete":				setupBossComplete();				break;			default:				break;		}	}		private function setupAccount() {		addButton("Kloar",362,700,300,50,25);				addText(30,0x191919,400,50,312,300,"Wat is dien noam?",false,2);				nameInput = new TextField();		nameInput.text = "...";  		nameInput.width = 300;  		nameInput.height = 31;		nameInput.x = 512-150;		nameInput.y = 400;		nameInput.background = true;		nameInput.backgroundColor = 0xB8D3E4;		nameInput.border = true;		textFormat = new TextFormat();		textFormat.color = 0x191919;		textFormat.size = 30;		textFormat.align = TextAlign.CENTER;		nameInput.type = "input";		nameInput.maxChars = 10;		nameInput.setTextFormat(textFormat);		addChild(nameInput);		nameInput.addEventListener(Event.CHANGE, updateText);	}		private function setupMainMenu() {		nameString = "Moi, " + EduGame.getMain().pData.data.name + "\nAander noam?";		addButton("Speulen",362,250,300,50,25);		addButton("Infermoatsie",362,325,300,50,25);		addButton("Puntenbred",362,400,300,50,25);		addButton("Verantwoorden",362,475,300,50,25);		addButton("Stop",362,550,300,50,25);		addButton(nameString,874,0,150,50,14);		getChildByName(nameString).alpha = .5;	}		private function updateText(e:Event) {		nameInput.setTextFormat(textFormat);	}		private function setupInfo() {		addButton("Menu",362,700,300,50,25);	}		private function setupScoreboard(level:Number) {		addText(40,0x191919,600,50,212,100,"Puntenbred " + level + ":",false,2);		addText(30,0x191919,600,50,212,200,"Ploats    |             Noam             |     Punten",false,2);				switch (level) {			case 1:				addText(25,0x191919,400,40,250,250,"1.                 " + EduGame.getMain().pData.data.topListNames1[0],false,1);				addText(25,0x191919,400,40,250,290,"2.                 " + EduGame.getMain().pData.data.topListNames1[1],false,1);				addText(25,0x191919,400,40,250,330,"3.                 " + EduGame.getMain().pData.data.topListNames1[2],false,1);				addText(25,0x191919,400,40,250,370,"4.                 " + EduGame.getMain().pData.data.topListNames1[3],false,1);				addText(25,0x191919,400,40,250,410,"5.                 " + EduGame.getMain().pData.data.topListNames1[4],false,1);				addText(25,0x191919,400,40,250,450,"6.                 " + EduGame.getMain().pData.data.topListNames1[5],false,1);				addText(25,0x191919,400,40,250,490,"7.                 " + EduGame.getMain().pData.data.topListNames1[6],false,1);				addText(25,0x191919,400,40,250,530,"8.                 " + EduGame.getMain().pData.data.topListNames1[7],false,1);				addText(25,0x191919,400,40,250,570,"9.                 " + EduGame.getMain().pData.data.topListNames1[8],false,1);				addText(25,0x191919,400,40,250,610,"10.               " + EduGame.getMain().pData.data.topListNames1[9],false,1);				addText(25,0x191919,200,40,600,250,EduGame.getMain().pData.data.topListScore1[0],false,2);				addText(25,0x191919,200,40,600,290,EduGame.getMain().pData.data.topListScore1[1],false,2);				addText(25,0x191919,200,40,600,330,EduGame.getMain().pData.data.topListScore1[2],false,2);				addText(25,0x191919,200,40,600,370,EduGame.getMain().pData.data.topListScore1[3],false,2);				addText(25,0x191919,200,40,600,410,EduGame.getMain().pData.data.topListScore1[4],false,2);				addText(25,0x191919,200,40,600,450,EduGame.getMain().pData.data.topListScore1[5],false,2);				addText(25,0x191919,200,40,600,490,EduGame.getMain().pData.data.topListScore1[6],false,2);				addText(25,0x191919,200,40,600,530,EduGame.getMain().pData.data.topListScore1[7],false,2);				addText(25,0x191919,200,40,600,570,EduGame.getMain().pData.data.topListScore1[8],false,2);				addText(25,0x191919,200,40,600,610,EduGame.getMain().pData.data.topListScore1[9],false,2);				break;			case 2:				addText(25,0x191919,400,40,250,250,"1.                 " + EduGame.getMain().pData.data.topListNames2[0],false,1);				addText(25,0x191919,400,40,250,290,"2.                 " + EduGame.getMain().pData.data.topListNames2[1],false,1);				addText(25,0x191919,400,40,250,330,"3.                 " + EduGame.getMain().pData.data.topListNames2[2],false,1);				addText(25,0x191919,400,40,250,370,"4.                 " + EduGame.getMain().pData.data.topListNames2[3],false,1);				addText(25,0x191919,400,40,250,410,"5.                 " + EduGame.getMain().pData.data.topListNames2[4],false,1);				addText(25,0x191919,400,40,250,450,"6.                 " + EduGame.getMain().pData.data.topListNames2[5],false,1);				addText(25,0x191919,400,40,250,490,"7.                 " + EduGame.getMain().pData.data.topListNames2[6],false,1);				addText(25,0x191919,400,40,250,530,"8.                 " + EduGame.getMain().pData.data.topListNames2[7],false,1);				addText(25,0x191919,400,40,250,570,"9.                 " + EduGame.getMain().pData.data.topListNames2[8],false,1);				addText(25,0x191919,400,40,250,610,"10.               " + EduGame.getMain().pData.data.topListNames2[9],false,1);				addText(25,0x191919,200,40,600,250,EduGame.getMain().pData.data.topListScore2[0],false,2);				addText(25,0x191919,200,40,600,290,EduGame.getMain().pData.data.topListScore2[1],false,2);				addText(25,0x191919,200,40,600,330,EduGame.getMain().pData.data.topListScore2[2],false,2);				addText(25,0x191919,200,40,600,370,EduGame.getMain().pData.data.topListScore2[3],false,2);				addText(25,0x191919,200,40,600,410,EduGame.getMain().pData.data.topListScore2[4],false,2);				addText(25,0x191919,200,40,600,450,EduGame.getMain().pData.data.topListScore2[5],false,2);				addText(25,0x191919,200,40,600,490,EduGame.getMain().pData.data.topListScore2[6],false,2);				addText(25,0x191919,200,40,600,530,EduGame.getMain().pData.data.topListScore2[7],false,2);				addText(25,0x191919,200,40,600,570,EduGame.getMain().pData.data.topListScore2[8],false,2);				addText(25,0x191919,200,40,600,610,EduGame.getMain().pData.data.topListScore2[9],false,2);				break;			case 3:				addText(25,0x191919,400,40,250,250,"1.                 " + EduGame.getMain().pData.data.topListNames3[0],false,1);				addText(25,0x191919,400,40,250,290,"2.                 " + EduGame.getMain().pData.data.topListNames3[1],false,1);				addText(25,0x191919,400,40,250,330,"3.                 " + EduGame.getMain().pData.data.topListNames3[2],false,1);				addText(25,0x191919,400,40,250,370,"4.                 " + EduGame.getMain().pData.data.topListNames3[3],false,1);				addText(25,0x191919,400,40,250,410,"5.                 " + EduGame.getMain().pData.data.topListNames3[4],false,1);				addText(25,0x191919,400,40,250,450,"6.                 " + EduGame.getMain().pData.data.topListNames3[5],false,1);				addText(25,0x191919,400,40,250,490,"7.                 " + EduGame.getMain().pData.data.topListNames3[6],false,1);				addText(25,0x191919,400,40,250,530,"8.                 " + EduGame.getMain().pData.data.topListNames3[7],false,1);				addText(25,0x191919,400,40,250,570,"9.                 " + EduGame.getMain().pData.data.topListNames3[8],false,1);				addText(25,0x191919,400,40,250,610,"10.               " + EduGame.getMain().pData.data.topListNames3[9],false,1);				addText(25,0x191919,200,40,600,250,EduGame.getMain().pData.data.topListScore3[0],false,2);				addText(25,0x191919,200,40,600,290,EduGame.getMain().pData.data.topListScore3[1],false,2);				addText(25,0x191919,200,40,600,330,EduGame.getMain().pData.data.topListScore3[2],false,2);				addText(25,0x191919,200,40,600,370,EduGame.getMain().pData.data.topListScore3[3],false,2);				addText(25,0x191919,200,40,600,410,EduGame.getMain().pData.data.topListScore3[4],false,2);				addText(25,0x191919,200,40,600,450,EduGame.getMain().pData.data.topListScore3[5],false,2);				addText(25,0x191919,200,40,600,490,EduGame.getMain().pData.data.topListScore3[6],false,2);				addText(25,0x191919,200,40,600,530,EduGame.getMain().pData.data.topListScore3[7],false,2);				addText(25,0x191919,200,40,600,570,EduGame.getMain().pData.data.topListScore3[8],false,2);				addText(25,0x191919,200,40,600,610,EduGame.getMain().pData.data.topListScore3[9],false,2);				break;			case 4:				addText(25,0x191919,400,40,250,250,"1.                 " + EduGame.getMain().pData.data.topListNames4[0],false,1);				addText(25,0x191919,400,40,250,290,"2.                 " + EduGame.getMain().pData.data.topListNames4[1],false,1);				addText(25,0x191919,400,40,250,330,"3.                 " + EduGame.getMain().pData.data.topListNames4[2],false,1);				addText(25,0x191919,400,40,250,370,"4.                 " + EduGame.getMain().pData.data.topListNames4[3],false,1);				addText(25,0x191919,400,40,250,410,"5.                 " + EduGame.getMain().pData.data.topListNames4[4],false,1);				addText(25,0x191919,400,40,250,450,"6.                 " + EduGame.getMain().pData.data.topListNames4[5],false,1);				addText(25,0x191919,400,40,250,490,"7.                 " + EduGame.getMain().pData.data.topListNames4[6],false,1);				addText(25,0x191919,400,40,250,530,"8.                 " + EduGame.getMain().pData.data.topListNames4[7],false,1);				addText(25,0x191919,400,40,250,570,"9.                 " + EduGame.getMain().pData.data.topListNames4[8],false,1);				addText(25,0x191919,400,40,250,610,"10.               " + EduGame.getMain().pData.data.topListNames4[9],false,1);				addText(25,0x191919,200,40,600,250,EduGame.getMain().pData.data.topListScore4[0],false,2);				addText(25,0x191919,200,40,600,290,EduGame.getMain().pData.data.topListScore4[1],false,2);				addText(25,0x191919,200,40,600,330,EduGame.getMain().pData.data.topListScore4[2],false,2);				addText(25,0x191919,200,40,600,370,EduGame.getMain().pData.data.topListScore4[3],false,2);				addText(25,0x191919,200,40,600,410,EduGame.getMain().pData.data.topListScore4[4],false,2);				addText(25,0x191919,200,40,600,450,EduGame.getMain().pData.data.topListScore4[5],false,2);				addText(25,0x191919,200,40,600,490,EduGame.getMain().pData.data.topListScore4[6],false,2);				addText(25,0x191919,200,40,600,530,EduGame.getMain().pData.data.topListScore4[7],false,2);				addText(25,0x191919,200,40,600,570,EduGame.getMain().pData.data.topListScore4[8],false,2);				addText(25,0x191919,200,40,600,610,EduGame.getMain().pData.data.topListScore4[9],false,2);				break;		}		addButton("1",312,30,100,40,20);		addButton("2",412,30,100,40,20);		addButton("3",512,30,100,40,20);		addButton("4",612,30,100,40,20);		addButton("Menu",562,700,300,50,25);		addButton("Vannijs",162,700,300,50,25);	}		private function setupLvlSelect() {		addButton("Veurjoar",362,250,300,50,25);		addButton("Zummer",362,325,300,50,25);		addButton("Haarst",362,400,300,50,25);		addButton("Winter",362,475,300,50,25);		addButton("Menu",362,700,300,50,25);	}		private function setupCredits() {		addButton("Menu",362,700,300,50,25);	}		private function setupPause() {		addButton("Stoppen",562,700,300,50,25);		addButton("Deurgoan",162,700,300,50,25);	}		private function setupScore() {		var id:Number = LevelManager.getLevelM().levelID;		addText(30,0x191919,600,50,212,100,"Dien punten:",false,2);		addText(25,0x191919,600,50,212,200,"Level: " + EduGame.getMain().pData.data.levelScore[id],false,2);		addText(25,0x191919,600,50,212,250,"Schoade: " + EduGame.getMain().pData.data.healthScore[id],false,2);		addText(25,0x191919,600,50,212,300,"Eerappels: " + EduGame.getMain().pData.data.itemScore[id],false,2);		addText(25,0x191919,600,50,212,350,"Tied: " + EduGame.getMain().pData.data.timeScore[id],false,2);		addText(25,0x191919,600,50,212,400,"Vijanden versloagen: " + EduGame.getMain().pData.data.killsScore[id],false,2);		addText(25,0x191919,600,50,212,450,"Totaal: " + EduGame.getMain().pData.data.totalScore[id],false,2);		addButton("Menu ",562,700,300,50,25);		addButton("Opbaargen",162,700,300,50,25);	}		private function setupConfirmButtons() {		var ab = new AlphaBlock();		addChild(ab);		ab.x = -100;		ab.y = -100;		ab.width = 1500;		ab.height = 1000;		ab.alpha = .8;		addText(50,0xFF0000,600,80,212,200,"Waist zeker?",false,2);		addButton("Joa",562,400,300,50,25);		addButton("Nee",162,400,300,50,25);	}		private function setupPuzzleComplete() {		addButton("-->",362,700,300,50,25);	}		private function setupBossComplete() {		setupScore();	}	private function mouseDownHandler(e:MouseEvent){		e.target.gotoAndStop(2);		SoundManager.soundMan.playSound("click");	}		private function mouseUpHandler(e:MouseEvent){		e.target.gotoAndStop(1);		switch (e.target.name) {			case "Speulen":				EduGame.getMain().setupScreen("menu","levelselect");				break;			case "Veurjoar":				EduGame.getMain().setupScreen("game","spring");				EduGame.getMain().clearAndReset();				SoundManager.soundMan.playSound("spring");				break;			case "Zummer":				EduGame.getMain().setupScreen("game","summer");				EduGame.getMain().clearAndReset();				SoundManager.soundMan.playSound("summer");				break;			case "Haarst":				EduGame.getMain().setupScreen("game","autumn");				EduGame.getMain().clearAndReset();				SoundManager.soundMan.playSound("autumn");				break;			case "Winter":				EduGame.getMain().setupScreen("game","winter");				EduGame.getMain().clearAndReset();				SoundManager.soundMan.playSound("winter");				break;			case "Infermoatsie":				EduGame.getMain().setupScreen("menu","info");				break;			case "Puntenbred":				EduGame.getMain().setupScreen("menu","scoreboard1");				break;			case "Verantwoorden":				EduGame.getMain().setupScreen("menu","credits");				break;			case "Stop":				fscommand("quit");				break;			case "Menu":				EduGame.getMain().setupScreen("menu","main");				break;			case "Menu ":				EduGame.getMain().setupScreen("menu","main");				SoundManager.soundMan.stopAllSound();				EduGame.getMain().clearAndReset();				SoundManager.soundMan.playSound("menu");				break;			case "Kloar":				EduGame.getMain().pData.data.name = nameInput.text;				EduGame.getMain().setupScreen("menu","main");				break;			case nameString:				EduGame.getMain().setupScreen("menu","account");				break;			case "Deurgoan":				EduGame.getMain().pause();				break;			case "Stoppen":				if (LevelManager.getLevelM().boss == true)					ShootingBoss.sBoss.kill();				if (EduGame.getMain().state == "game") {					LevelManager.getLevelM().clearLevel();				}				SoundManager.soundMan.stopAllSound();				EduGame.getMain().setupScreen("menu","main");				EduGame.getMain().unPause();				EduGame.getMain().saveData();				EduGame.getMain().clearAndReset();				break;			case "Opbaargen":				if (LevelManager.getLevelM().boss == true)					ShootingBoss.sBoss.kill();				if (EduGame.getMain().state == "game") {					LevelManager.getLevelM().clearLevel();				}				SoundManager.soundMan.stopAllSound();				EduGame.getMain().unPause();				EduGame.getMain().saveToScoreBoard(LevelManager.getLevelM().levelID);				EduGame.getMain().clearAndReset();				break;			case "Vannijs":				setupConfirmButtons();				break;			case "Joa":				EduGame.getMain().resetData();				break;			case "Nee":				EduGame.getMain().setupScreen("menu","scoreboard1");				break;			case "1":				EduGame.getMain().setupScreen("menu","scoreboard1");				break;			case "2":				EduGame.getMain().setupScreen("menu","scoreboard2");				break;			case "3":				EduGame.getMain().setupScreen("menu","scoreboard3");				break;			case "4":				EduGame.getMain().setupScreen("menu","scoreboard4");				break;			case "-->":				if (LevelManager.getLevelM().levelID == 1) {					PuzzleS.getPuzzleS().removePuzzle("spring");					EduGame.getMain().setupScreen("game","springboss");				}				if (LevelManager.getLevelM().levelID == 2) {					PuzzleS.getPuzzleS().removePuzzle("summer");					EduGame.getMain().setupScreen("game","summerboss");				}				if (LevelManager.getLevelM().levelID == 3) {					PuzzleS.getPuzzleS().removePuzzle("autumn");					EduGame.getMain().setupScreen("game","autumnboss");				}				if (LevelManager.getLevelM().levelID == 4) {					PuzzleS.getPuzzleS().removePuzzle("winter");					EduGame.getMain().setupScreen("game","winterboss");				}				break;			default:				trace("ERROR: Unknown button.");				break;		}	}		private function addButton(txt:String,x:Number,y:Number,size:Number,heigth:Number,textSize:Number):void {				button = new Button();		addChild(button);		button.name = txt;		button.x = x;		button.y = y;		button.width = size;		button.height = heigth;		button.stop();				buttonLabel = new TextField();		buttonLabel.text = txt;  		buttonLabel.width = size;  		buttonLabel.height = heigth;		buttonLabel.x = x;  		buttonLabel.y = y+10;		buttonLabel.name = txt + "n";		buttonLabel.autoSize = TextFieldAutoSize.CENTER;		var textFormat:TextFormat = new TextFormat();		textFormat.color = 0x191919;		textFormat.size = textSize;		buttonLabel.selectable = false;		buttonLabel.mouseEnabled = false;		buttonLabel.setTextFormat(textFormat);		button.buttonMode = true;		addChild(buttonLabel);		button.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler);		button.addEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);	}		private function addText(size:Number, color:uint, width:Number, heigth:Number, x:Number, y:Number, txt:String, select:Boolean,align:int) {		text = new TextField();		text.text = txt;  		text.width = width;  		text.height = heigth;		text.x = x;  		text.y = y;		text.name = txt + "n";		var textFormat:TextFormat = new TextFormat();		textFormat.color = color;		textFormat.size = size;		if (align == 1)			textFormat.align = TextAlign.LEFT;		if (align == 2)			textFormat.align = TextAlign.CENTER;		if (align == 3)			textFormat.align = TextAlign.RIGHT;		text.setTextFormat(textFormat);		if (select) {			text.selectable = false;			text.mouseEnabled = false;		}		addChild(text);	}}	}