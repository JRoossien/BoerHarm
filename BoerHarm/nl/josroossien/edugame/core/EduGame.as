package nl.josroossien.edugame.core {	import flash.display.MovieClip;	import flash.events.Event;	import flash.net.SharedObject;	import flash.utils.getTimer;		import nl.josroossien.edugame.builders.LevelManager;	import nl.josroossien.edugame.builders.SoundManager;	import nl.josroossien.edugame.display.GameS;	import nl.josroossien.edugame.display.MenuS;	import nl.josroossien.edugame.display.PuzzleS;	import nl.josroossien.edugame.events.EventsListener;	import nl.josroossien.edugame.objects.Player;	import nl.josroossien.edugame.utils.Debug;	import nl.josroossien.edugame.utils.DisplayUtil;
		public class EduGame extends MovieClip {				public static var main:EduGame;		public var state:String = "menu";		private var menu:MenuS;		private var game:GameS;		private var puzzle:PuzzleS;		private var soundMan:SoundManager;		private var event:EventsListener;		private var paused:Boolean;		public var pData:SharedObject = SharedObject.getLocal("pData");		public var healthScore:Array = [0,0,0,0];		public var itemScore:Array = [0,0,0,0];		public var timeScore:Array = [0,0,0,0];		public var killsScore:Array = [0,0,0,0];		public var levelScore:Array = [0,0,0,0];		public var totalScore:Array = [0,0,0,0];		public var topListNames1:Array = ["Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms"];		public var topListScore1:Array = [500,400,300,200,100,50,25,10,5,0];		public var topListNames2:Array = ["Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms"];		public var topListScore2:Array = [500,400,300,200,100,50,25,10,5,0];		public var topListNames3:Array = ["Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms"];		public var topListScore3:Array = [500,400,300,200,100,50,25,10,5,0];		public var topListNames4:Array = ["Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms"];		public var topListScore4:Array = [500,400,300,200,100,50,25,10,5,0];		private var added:Boolean;				public function EduGame() {			//pData.clear();			soundMan = new SoundManager();			addChild(soundMan);			main = this;			loadData();			event = new EventsListener();			addChild(event);			this.addEventListener(Event.ENTER_FRAME,mainGameLoop);		}				public static function getMain():EduGame {			return main;		}				private function mainGameLoop(e:Event):void {			Debug.getDebug().showDebug(true, true);		}				public function setupScreen(screen:String, param:String):void {						DisplayUtil.removeAllChildren(this);			switch (screen) {				case "game":					game = new GameS(param);					addChild(game);					state = "game";					break;				case "puzzle":					puzzle = new PuzzleS(param);					addChild(puzzle);					state = "puzzle";					break;				case "menu":					menu = new MenuS(param);					addChild(menu);					state = "menu";					break;			}		}				public function pause():void {			if (paused) {				stage.frameRate = 30;				paused = false;				removeChild(menu);				trace("NOT PAUSED!");			} else {				stage.frameRate = 0;				paused = true;				menu = new MenuS("pause");				addChild(menu);				trace("PAUSED!");			}		}				public function unPause():void {			stage.frameRate = 30;			paused = false;		}				public function clearAndReset():void {			GameS.getGameS().kills = 0;			GameS.getGameS().collectedItems = 0;			GameS.getGameS().levelS = 0;			GameS.getGameS().timeScore = 500;			GameS.getGameS().damageScore = 0;			LevelManager.getLevelM().itemsCompleted = 0;			SoundManager.soundMan.stopAllSound();		}				private function loadData():void {			if (pData.data.name == undefined) {				trace("First time playing.");				setupScreen("menu","account");				pData.data.topListNames1 = topListNames1;				pData.data.topListScore1 = topListScore1;				pData.data.topListNames2 = topListNames2;				pData.data.topListScore2 = topListScore2;				pData.data.topListNames3 = topListNames3;				pData.data.topListScore3 = topListScore3;				pData.data.topListNames4 = topListNames4;				pData.data.topListScore4 = topListScore4;				pData.flush();			} else {				setupScreen("menu","main");			}		}				public function saveData():void {			var id:Number = LevelManager.getLevelM().levelID;			healthScore[id] = GameS.getGameS().damageScore - 1;			itemScore[id] = ((LevelManager.getLevelM().LvlPotato.length - 9) * -1) * 10;			var timeScoreRounded:Number = Math.round(GameS.getGameS().timeScore);			if (timeScoreRounded < 0)				timeScoreRounded = 0;			timeScore[id] = timeScoreRounded;			if (GameS.getGameS().kills < 20) {				killsScore[id] = GameS.getGameS().kills * 5;			} else {				killsScore[id] = 100;			}			levelScore[id] = GameS.getGameS().levelS;						totalScore[id] = healthScore[id] + itemScore[id] + timeScore[id] + killsScore[id] + levelScore[id];						pData.data.healthScore = healthScore;			pData.data.itemScore = itemScore;			pData.data.timeScore = timeScore;			pData.data.killsScore = killsScore;			pData.data.levelScore = levelScore;			pData.data.totalScore = totalScore;			pData.flush();			setupScreen("menu","score");		}				public function resetData():void {			var name:String = pData.data.name;			pData.clear();			topListNames1 = ["Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms"];			topListScore1 = [500,400,300,200,100,50,25,10,5,0];			topListNames2 = ["Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms"];			topListScore2 = [500,400,300,200,100,50,25,10,5,0];			topListNames3 = ["Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms"];			topListScore3 = [500,400,300,200,100,50,25,10,5,0];			topListNames4 = ["Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms","Boer Harms"];			topListScore4 = [500,400,300,200,100,50,25,10,5,0];			pData.data.name = name;			pData.data.topListNames1 = topListNames1;			pData.data.topListScore1 = topListScore1;			pData.data.topListNames2 = topListNames2;			pData.data.topListScore2 = topListScore2;			pData.data.topListNames3 = topListNames3;			pData.data.topListScore3 = topListScore3;			pData.data.topListNames4 = topListNames4;			pData.data.topListScore4 = topListScore4;			pData.flush();			setupScreen("menu","scoreboard1");		}				public function saveToScoreBoard(level:Number):void {			var i:int;			topListNames1 = pData.data.topListNames1;			topListScore1 = pData.data.topListScore1;			topListNames2 = pData.data.topListNames2;			topListScore2 = pData.data.topListScore2;			topListNames3 = pData.data.topListNames3;			topListScore3 = pData.data.topListScore3;			topListNames4 = pData.data.topListNames4;			topListScore4 = pData.data.topListScore4;			switch (level) {				case 1:					added = false;					for (i = 0 ; i < 10 ; i++) {						if (totalScore[level] >= pData.data.topListScore1[i] && added == false) {							topListNames1.splice(i, 0, pData.data.name);							topListScore1.splice(i,0, totalScore[level]);							topListNames1.pop();							topListScore1.pop();							pData.data.topListNames1 = topListNames1;							pData.data.topListScore1 = topListScore1;							pData.flush();							added = true;						}					}					setupScreen("menu","scoreboard1");					break;				case 2:					added = false;					for (i = 0 ; i < 10 ; i++) {						if (totalScore[level] >= pData.data.topListScore2[i] && added == false) {							topListNames2.splice(i, 0, pData.data.name);							topListScore2.splice(i,0, totalScore[level]);							topListNames2.pop();							topListScore2.pop();							pData.data.topListNames2 = topListNames2;							pData.data.topListScore2 = topListScore2;							pData.flush();							added = true;						}					}					setupScreen("menu","scoreboard2");					break;				case 3:					added = false;					for (i = 0 ; i < 10 ; i++) {						if (totalScore[level] >= pData.data.topListScore3[i] && added == false) {							topListNames3.splice(i, 0, pData.data.name);							topListScore3.splice(i,0, totalScore[level]);							topListNames3.pop();							topListScore3.pop();							pData.data.topListNames3 = topListNames3;							pData.data.topListScore3 = topListScore3;							pData.flush();							added = true;						}					}					setupScreen("menu","scoreboard3");					break;				case 4:					added = false;					for (i = 0 ; i < 10 ; i++) {						if (totalScore[level] >= pData.data.topListScore4[i] && added == false) {							topListNames4.splice(i, 0, pData.data.name);							topListScore4.splice(i,0, totalScore[level]);							topListNames4.pop();							topListScore4.pop();							pData.data.topListNames4 = topListNames4;							pData.data.topListScore4 = topListScore4;							pData.flush();							added = true;						}					}					setupScreen("menu","scoreboard4");					break;			}		}}}