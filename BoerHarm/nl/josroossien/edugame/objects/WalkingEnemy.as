package nl.josroossien.edugame.objects  {import flash.display.MovieClip;
import flash.events.Event;
import flash.geom.Rectangle;

import nl.josroossien.edugame.builders.LevelManager;
import nl.josroossien.edugame.display.GameS;
import nl.josroossien.edugame.utils.MathUtil;
import nl.josroossien.edugame.utils.RectangleCollision;
		public class WalkingEnemy extends MovieClip {				public static var wEnemy:WalkingEnemy;				private var vxE:Number = 0;		private var vyE:Number = 4;		private var speed:Number = .6;		private var frictionTot:Number = 0.9;		private var gravity:Number = 4;		private var eRect:Rectangle;		public var health:Number = 50;		private var block:Block;		private var pinguin:Pinguin;				public var EmovingL:Boolean;		public var EmovingR:Boolean;		public var EonGround:Boolean;				public function WalkingEnemy(ID:Number) {			wEnemy = this;			this.x = MathUtil.randomNumber(500,4800);			this.y = 100;			EmovingL = true;			setupEnemy(ID);			this.addEventListener(Event.ENTER_FRAME,gameLoop);		}				public static function getEnemy():WalkingEnemy {			return wEnemy;		}				private function setupEnemy(ID:Number) {			switch (ID) {				case 1:					eRect = new Rectangle(0, 0, 70, 100); 					pinguin = new Pinguin();					addChild(pinguin);					break;				case 2:					break;				case 3:					break;				case 4:					break;			}		}				private function gameLoop(e:Event):void {					moveEnemy();			checkGroundCollission();			checkVoid();			checkDeath();		}				private function moveEnemy():void {						if (EmovingL) {				this.scaleX = -1;				vxE -= speed;			}			if (EmovingR) {				this.scaleX = 1;				vxE += speed;			}			vyE += gravity;			vxE *= frictionTot;			vyE *= frictionTot;						this.x += vxE;			this.y += vyE;			eRect.x = this.x;			eRect.y = this.y;		}			private function checkGroundCollission():void {			for(var b:Number = 0; b < LevelManager.getLevelM().LvlObjects.length; b++) {				var bl:Rectangle = Rectangle(LevelManager.getLevelM().LvlObjects[b]);								var collision = RectangleCollision.rectCheckDir(bl,eRect,2,0);				if (collision == 2) {					this.vyE = 0;					this.y -= RectangleCollision.rectBot(bl,eRect,2,0);				}				if (collision == 8)					this.y += RectangleCollision.rectTop(bl,eRect,2,0);				if (collision == 4) {					this.x += RectangleCollision.rectLeft(bl,eRect,2,0);					this.vxE *= -1;					this.EmovingL = false;					this.EmovingR = true;				}				if (collision == 6) {					this.x -= RectangleCollision.rectRight(bl,eRect,2,0);					this.vxE *= -1;					this.EmovingL = true;					this.EmovingR = false;				}			}		}				private function checkVoid():void {			if (this.y-this.height > 768) {				this.x = MathUtil.randomNumber(500,4800);				this.y = 100;			}		}				private function checkDeath():void {			if (this.health < 1) {				this.health = 50;				this.x = MathUtil.randomNumber(500,4800);				this.y = 100;				GameS.getGameS().kills ++;			}		}		}}